/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.0/userguide/building_java_projects.html
 */
plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'java'
    id 'distribution'
    id 'application'
    id 'com.github.johnrengelman.shadow' version "7.0.0"
}

java {
    sourceCompatibility = JavaVersion.VERSION_13
    targetCompatibility = JavaVersion.VERSION_13
}

mainClassName = 'App'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13.1'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'
    implementation group: 'org.json', name: 'json', version: '20210307'
    implementation group: 'info.picocli', name: 'picocli', version: '4.6.1'
    implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.12.3'
    implementation group: 'commons-io', name: 'commons-io', version: '2.8.0'
}

task fat(type: Jar) {
    manifest {
        attributes "Main-Class": mainClassName
    }
    tasks.withType(Jar){
        destinationDir = file("$rootDir/dist")
    }
    from {
     //   configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
        configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
    exclude 'META-INF/LICENSE'
    exclude 'module-info.class'
    exclude 'META-INF/NOTICE'
    exclude 'META-INF/*'
}
